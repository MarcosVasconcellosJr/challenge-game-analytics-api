generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// -------------------- tables --------------------

model Match {
  id               String            @id @default(uuid())
  startedAt        DateTime
  endedAt          DateTime
  winningTeamId    String?
  winningPlayerId  String?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime?         @updatedAt
  winningTeam      Team?             @relation(fields: [winningTeamId], references: [id])
  winningPlayer    Player?           @relation(fields: [winningPlayerId], references: [id])
  matchEvents      MatchEvent[]
  playersOnMatches PlayersOnMatchs[]

  @@map("match")
}

model MatchEvent {
  id             String   @id @default(uuid())
  matchId        String
  eventType      String
  isWorldEvent   Boolean  @default(false)
  isFriendlyFire Boolean  @default(false)
  occurredAt     DateTime
  weaponId       String

  killerId     String
  victimId     String
  match        Match  @relation(fields: [matchId], references: [id], onDelete: Cascade)
  weapon       Weapon @relation(fields: [weaponId], references: [id])
  killerPlayer Player @relation(fields: [killerId], references: [id], name: "killerEvents")
  victimPlayer Player @relation(fields: [victimId], references: [id], name: "victimEvents")

  @@map("match-event")
}

model Player {
  id              String            @id @default(uuid())
  name            String            @unique
  match           Match[]
  eventsAsKiller  MatchEvent[]      @relation("killerEvents")
  eventsAsVictim  MatchEvent[]      @relation("victimEvents")
  teamId          String
  team            Team              @relation(fields: [teamId], references: [id])
  playersOnMatchs PlayersOnMatchs[]
  awards          Award[]

  @@map("player")
}

model Team {
  id      String   @id @default(uuid())
  name    String   @unique
  match   Match[]
  players Player[]

  @@map("team")
}

model Weapon {
  id              String            @id @default(uuid())
  name            String            @unique
  matchEvents     MatchEvent[]
  playersOnMatchs PlayersOnMatchs[]

  @@map("weapon")
}

model PlayersOnMatchs {
  match             Match   @relation(fields: [matchId], references: [id])
  matchId           String
  player            Player  @relation(fields: [playerId], references: [id])
  playerId          String
  preferredWeapon   Weapon? @relation(fields: [preferredWeaponId], references: [id])
  preferredWeaponId String?

  killCount         Int @default(0)
  friendlyKillCount Int @default(0)
  totalKillCount    Int @default(0)
  deathCount        Int @default(0)
  maxStreakCount    Int @default(0)
  fragScore         Int @default(0)
  killVsDeathScore  Int @default(0)

  @@id([matchId, playerId])
  @@map("players-on-matchs")
}

model Award {
  id       String @id @default(uuid())
  title    String
  playerId String
  player   Player @relation(fields: [playerId], references: [id])

  @@map("award")
}
